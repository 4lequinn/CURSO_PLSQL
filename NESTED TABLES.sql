
----------------------------------------------------------------
-- NESTED TABLES (TABLAS ANIDADAS)
-- Iguales a los VARRAY pero son dinámicos
----------------------------------------------------------------

SET SERVEROUTPUT ON;

-- No son indexadas
DECLARE
    TYPE tipo_uwu IS TABLE OF mona_xina%rowtype;
    monas_xinas tipo_uwu := tipo_uwu();
BEGIN
    SELECT * BULK COLLECT INTO monas_xinas FROM mona_xina;
    
    FOR i IN MONAS_XINAS.FIRST .. MONAS_XINAS.LAST 
    LOOP
        DBMS_OUTPUT.PUT_LINE(MONAS_XINAS(i).id_mona || ' - ' || MONAS_XINAS(i).descripcion);
    END LOOP;
END;
/

-- Métodos en NESTED TABLES

--NESTED TABLES 
-- NO TIENEN LIMITE DEFINIDO
-- SE ACCEDE POR POR POSICION
-- SPARSE - DIPERSOS HUECOS
-- VARRAYS

DECLARE
    TYPE EMPLEADO IS TABLE OF EMPLOYEES%ROWTYPE;
    
    EMPLEADOS EMPLEADO:=EMPLEADO();
BEGIN
    SELECT * BULK COLLECT INTO EMPLEADOS
    FROM EMPLOYEES FETCH FIRST 10 ROWS ONLY;
    
    FOR I IN EMPLEADOS.FIRST()..EMPLEADOS.LAST() 
    LOOP
    DBMS_OUTPUT.PUT_LINE(EMPLEADOS(I).FIRST_NAME||' '||EMPLEADOS(I).SALARY);
    
    END LOOP;
        DBMS_OUTPUT.PUT_LINE(EMPLEADOS.LAST());
        DBMS_OUTPUT.PUT_LINE(EMPLEADOS.FIRST());
        DBMS_OUTPUT.PUT_LINE(EMPLEADOS.NEXT(1)); 
    IF EMPLEADOS.EXISTS(20) THEN
        DBMS_OUTPUT.PUT_LINE('EXISTE');
    ELSE
        DBMS_OUTPUT.PUT_LINE('NO EXISTE');
    END IF;
    EMPLEADOS.DELETE(2);
    FOR I IN EMPLEADOS.FIRST()..EMPLEADOS.LAST() LOOP
        IF EMPLEADOS.EXISTS(I) THEN
            DBMS_OUTPUT.PUT_LINE(EMPLEADOS(I).FIRST_NAME||' '||EMPLEADOS(I).SALARY); 
        END IF;
    END LOOP;    
END;
/


-- CREAR NESTED TABLE A NIVEL DE SCHEMA

CREATE OR REPLACE TYPE TIPO_NESTED IS TABLE OF VARCHAR2(100);
/

DECLARE 
    v_nombre TIPO_NESTED := TIPO_NESTED('a');
BEGIN
    v_nombre(1) := 'uwu';
    DBMS_OUTPUT.PUT_LINE(v_nombre(1));
END;


SELECT * FROM USER_TYPES;

DESC TIPO_NESTED;
/
CREATE TABLE EMPLES 
(
    CODIGO NUMBER,
    DIRECCION VARCHAR2(100),
    DATOS tipo_nested
) -- DEBEMOS DEFINIRLE UNA TABLA AUXILIAR PARA GUARDAR LOS DATOS
NESTED TABLE DATOS STORE AS TABLA_DATOS;


DESC EMPLES;
/

-- VEMOS TODAS LAS TABLAS QUE TENEMOS
SELECT * FROM TAB;



INSERT INTO EMPLES VALUES (1,'PINTORES 5 ', TIPO_NESTED('PEPE'));

SELECT * FROM EMPLES;

-- ERROR , NO PUEDO MANIPULAR DIRECTAMENTE UNA TABLA AUXILIAR
SELECT * FROM TABLA_DATOS;



-- NO SE PUEDE CREAR A NIVEL DE BASE DE DATOS UNA NESTED TABLE CON ROWTYPE
-- DEBIDO A QUE ES UNA SENTENCIA PLSQL y NO SQL

-- ERROR
CREATE OR REPLACE TYPE tipo_prueba IS TABLE OF MONA_XINA%ROWTYPE;
/


-- SOLUCIÓN
-- CREAR UN OBJETO EN SQL

CREATE OR REPLACE TYPE OBJETO_MONAS_XINAS IS OBJECT 
(
    id_mona NUMBER(5),
    descripcion VARCHAR2(100)
);
/


-- ME DEJA INTRODUCIR DATOS COMPLEJOS EN UNA NESTED TABLE
CREATE OR REPLACE TYPE tipo_prueba IS TABLE OF OBJETO_MONAS_XINAS;
/

DESC tipo_prueba;


